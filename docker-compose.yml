version: '3.3'

networks:
  network-name: # Mudar nome
    driver: bridge

services:
  db:
    image: postgres:17-alpine
    restart: always
    volumes:
      - project:/var/lib/postgresql/data/
    environment:
      - TZ=America/Sao_Paulo
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - network-name
    healthcheck:
      test: "pg_isready -U ${DB_USER} -d ${DB_NAME}"
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - project_redis:/data
    networks:
      - network-name
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    # entrypoint: ['./entrypoints/api.sh']
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    ports:
      - 8000:8000
    networks:
      - network-name
    volumes:
      - ./core:/app/core
      - ./features:/app/features
      - ./media:/app/media
    env_file:
      .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: "curl --silent --fail http://localhost:8000/api/health/ || exit 1"
      interval: 10s
      timeout: 10s
      retries: 3

  worker:
    build: .
    command: celery -A core worker --beat --loglevel=info
    restart: always
    volumes:
      - ./core:/app/core
      - ./features:/app/features
      - ./media:/app/media
    networks:
      - network-name
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy

volumes:
  project:
  project_redis:
