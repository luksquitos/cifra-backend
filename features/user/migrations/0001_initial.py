# Generated by Django 4.2.3 on 2024-07-25 19:34

from django.db import migrations, models
import django.utils.timezone
import features.user.models


def create_admin_user(apps, *args, **kwargs):
    User = apps.get_model("user", "User")
    user = User.objects.create_superuser(email="admin@admin.com.br",password="admin")
    print(f"user {user} criado")

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(max_length=160, verbose_name='Nome')),
                ('is_staff', models.BooleanField(default=False, help_text='Indica que usuário consegue acessar este site de administração.', verbose_name='Membro da Equipe?')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de registro')),
                ('update_password', models.BooleanField(default=False, verbose_name='Precisa atualizar a senha?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', features.user.models.UserManager()),
            ],
        ),
        migrations.RunPython(create_admin_user)
    ]
